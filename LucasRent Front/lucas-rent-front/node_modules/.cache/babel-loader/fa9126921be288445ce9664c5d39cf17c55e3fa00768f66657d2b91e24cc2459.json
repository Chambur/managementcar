{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const setAuthToken = (username, password) => {\n  const token = btoa(`${username}:${password}`);\n  api.defaults.headers.common['Authorization'] = `Basic ${token}`;\n};\nexport const login = async (username, password) => {\n  try {\n    setAuthToken(username, password);\n    const response = await api.post('/login');\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getCars = async () => {\n  try {\n    const response = await api.get('/api/coches');\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const createCar = async carData => {\n  try {\n    const response = await api.post('/api/coches', carData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateCar = async (id, carData) => {\n  try {\n    const response = await api.put(`/api/coches/${id}`, carData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const deleteCar = async id => {\n  try {\n    await api.delete(`/api/coches/${id}`);\n  } catch (error) {\n    throw error;\n  }\n};\napi.interceptors.request.use(config => {\n  const auth = localStorage.getItem('auth');\n  if (auth) {\n    config.headers.Authorization = `Basic ${auth}`;\n  }\n  return config;\n});\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","setAuthToken","username","password","token","btoa","defaults","common","login","response","post","data","error","getCars","get","createCar","carData","updateCar","id","put","deleteCar","delete","interceptors","request","use","config","auth","localStorage","getItem","Authorization"],"sources":["C:/Users/Chambur/Desktop/LucasRent/LucasRent Front/lucas-rent-front/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport const setAuthToken = (username, password) => {\r\n  const token = btoa(`${username}:${password}`);\r\n  api.defaults.headers.common['Authorization'] = `Basic ${token}`;\r\n};\r\n\r\nexport const login = async (username, password) => {\r\n  try {\r\n    setAuthToken(username, password);\r\n    const response = await api.post('/login');\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getCars = async () => {\r\n  try {\r\n    const response = await api.get('/api/coches');\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createCar = async (carData) => {\r\n  try {\r\n    const response = await api.post('/api/coches', carData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateCar = async (id, carData) => {\r\n  try {\r\n    const response = await api.put(`/api/coches/${id}`, carData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteCar = async (id) => {\r\n  try {\r\n    await api.delete(`/api/coches/${id}`);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\napi.interceptors.request.use((config) => {\r\n  const auth = localStorage.getItem('auth');\r\n  if (auth) {\r\n    config.headers.Authorization = `Basic ${auth}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EAClD,MAAMC,KAAK,GAAGC,IAAI,CAAC,GAAGH,QAAQ,IAAIC,QAAQ,EAAE,CAAC;EAC7CN,GAAG,CAACS,QAAQ,CAACN,OAAO,CAACO,MAAM,CAAC,eAAe,CAAC,GAAG,SAASH,KAAK,EAAE;AACjE,CAAC;AAED,OAAO,MAAMI,KAAK,GAAG,MAAAA,CAAON,QAAQ,EAAEC,QAAQ,KAAK;EACjD,IAAI;IACFF,YAAY,CAACC,QAAQ,EAAEC,QAAQ,CAAC;IAChC,MAAMM,QAAQ,GAAG,MAAMZ,GAAG,CAACa,IAAI,CAAC,QAAQ,CAAC;IACzC,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACF,MAAMJ,QAAQ,GAAG,MAAMZ,GAAG,CAACiB,GAAG,CAAC,aAAa,CAAC;IAC7C,OAAOL,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,SAAS,GAAG,MAAOC,OAAO,IAAK;EAC1C,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMZ,GAAG,CAACa,IAAI,CAAC,aAAa,EAAEM,OAAO,CAAC;IACvD,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMK,SAAS,GAAG,MAAAA,CAAOC,EAAE,EAAEF,OAAO,KAAK;EAC9C,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMZ,GAAG,CAACsB,GAAG,CAAC,eAAeD,EAAE,EAAE,EAAEF,OAAO,CAAC;IAC5D,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMQ,SAAS,GAAG,MAAOF,EAAE,IAAK;EACrC,IAAI;IACF,MAAMrB,GAAG,CAACwB,MAAM,CAAC,eAAeH,EAAE,EAAE,CAAC;EACvC,CAAC,CAAC,OAAON,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAEDf,GAAG,CAACyB,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACzC,IAAIF,IAAI,EAAE;IACRD,MAAM,CAACzB,OAAO,CAAC6B,aAAa,GAAG,SAASH,IAAI,EAAE;EAChD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,eAAe5B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}